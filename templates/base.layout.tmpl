{{define "base"}}
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>my nice page</title>
    <meta name="viewport" content="width=device-width, initial-scale=1 shrink-to-fit=no" />
    <meta http-equiv="content-type" content="text/html" charset="utf-8" />
    <link rel="icon" href="data:,">
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/css/datepicker-bs5.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.5/dist/sweetalert2.min.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD"
          crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="/static/css/style.css">

  </head>

  <body>

    <nav class="navbar navbar-expand-lg bg-body-tertiary navbar bg-dark" data-bs-theme="dark">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Navbar</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/about">About</a>
            </li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Rooms
              </a>
              <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="/generals">Generals Quarters</a></li>
                <li><a class="dropdown-item" href="/majors">Majors Suite</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="#">Overview</a></li>
              </ul>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/search-availability">Book Now</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/contact">Contact</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
    {{block "content" .}}

    {{end}}

    <div class="row my-footer">
      <div class="col">
        left
      </div>
      <div class="col">
        middle
      </div>
      <div class="col">
        right
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
        crossorigin="anonymous"></script>

    <script async src="https://cdn.jsdelivr.net/npm/es-module-shims@1/dist/es-module-shims.min.js"
            crossorigin="anonymous"></script>

    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    {{block "js" .}}

    {{end}}



    <script>
      let attention = Prompt();

      // validation
      (() => {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.from(forms).forEach(form => {
          form.addEventListener('submit', event => {
            if (!form.checkValidity()) {
              event.preventDefault();
              event.stopPropagation();
            }

            form.classList.add('was-validated');
          }, false);
        });
      })();

      function notify(msg, msgType) {
        notie.alert({
          type: msgType,
          text: msg,
        })
      }

      function notifyModal(title, text, icon, confirmButtonText) {
        Swal.fire({
          title: title,
          html: text,
          icon: icon,
          confirmButtonText: confirmButtonText
        })
      }

      {{with .Error}}
      notify("{{.}}", "error")
      {{end}}

      {{with .Flash}}
      notify("{{.}}", "success")
      {{end}}

      {{with .Warning}}
      notify("{{.}}", "warning")
      {{end}}

      // Prompt is our JavaScript module for all alerts, notifications and popup dialogs
      function Prompt() {

        let toast = function(c) {
          const {
            msg = "",
            icon = "success",
            position = "top-end",

          } = c;
          const Toast = Swal.mixin({
            toast: true,
            title: msg,
            position: position,
            icon: icon,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
              toast.addEventListener('mouseenter', Swal.stopTimer)
              toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
          })

          Toast.fire({})

        }

        let success = function(c) {
          const {
            msg = "",
            title = "",
            footer = "",

          } = c;
          Swal.fire({
            icon: 'success',
            title: title,
            text: msg,
            footer: footer,
          })
        }

        let error = function(c) {
          const {
            msg = "",
            title = "",
            footer = "",

          } = c;
          Swal.fire({
            icon: 'error',
            title: title,
            text: msg,
            footer: footer,
          })
        }
        async function custom(c) {
          const {
            icon = "",
            msg = "",
            title = "",
            showConfirmButton = true,
          } = c;

          const { value: result } = await Swal.fire({
            icon: icon,
            title: title,
            html: msg,
            backdrop: false,
            focusConfirm: false,
            showCancelButton: true,
            showConfirmButton: showConfirmButton,

            willOpen: () => {
              if (c.willOpen !== undefined) {
                c.willOpen();
              }
            },
            didOpen: () => {
              if (c.didOpen !== undefined) {
                c.didOpen();
              }
            },
            preConfirm: () => {
              return [
                document.getElementById('start').value,
                document.getElementById('end').value
              ]
            }
          })

          if (result) {
            if (result.dismisst !== Swal.DismissReason.cancel) {
              if (result.value !== "") {
                if (c.callback !== undefined) {
                  c.callback(result);
                }
              } else {
                c.callback(false)
              }
            } else {
              c.callback(false)
            };
          }
        }

        return {
          toast: toast,
          success: success,
          error: error,
          custom: custom,
        }

      }

    </script>

  </body>
</html>



{{end}}
